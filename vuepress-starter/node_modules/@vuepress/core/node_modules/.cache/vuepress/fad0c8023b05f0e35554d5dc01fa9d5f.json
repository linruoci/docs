{"remainingRequest":"D:\\myweb\\vuepress-starter\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\myweb\\vuepress-starter\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\myweb\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\myweb\\vuepress-starter\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\myweb\\vuepress-starter\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\myweb\\vuepress-starter\\docs\\product\\BlueToothWatch2.md?vue&type=template&id=7a321554&","dependencies":[{"path":"D:\\myweb\\vuepress-starter\\docs\\product\\BlueToothWatch2.md","mtime":1681819422288},{"path":"D:\\myweb\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680790926664},{"path":"D:\\myweb\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680790926664},{"path":"D:\\myweb\\vuepress-starter\\node_modules\\babel-loader\\lib\\index.js","mtime":1680790928752},{"path":"D:\\myweb\\vuepress-starter\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1680790929703},{"path":"D:\\myweb\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680790926664},{"path":"D:\\myweb\\vuepress-starter\\node_modules\\vue-loader\\lib\\index.js","mtime":1680790929703},{"path":"D:\\myweb\\vuepress-starter\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1680790928158}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jOwogIHJldHVybiBfYygnQ29udGVudFNsb3RzRGlzdHJpYnV0b3InLCB7CiAgICBhdHRyczogewogICAgICAic2xvdC1rZXkiOiBfdm0uJHBhcmVudC5zbG90S2V5CiAgICB9CiAgfSwgW19jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJ0OTUiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiN0OTUiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFQ5NSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICJodHRwczovL3MxLnZpa2EuY24vc3BhY2UvMjAyMy8wNC8wOS9lZmNiMDE0NzZlZjA0ZjI4OTViMzM4MzQ4ODMzYTY5MiIsCiAgICAgICJhbHQiOiAiaW1hZ2UtMjAyMzA0MDkxMzQ0NDAyMDciCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzZWxsaW5nLXBvaW50IgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjc2VsbGluZy1wb2ludCIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgc2VsbGluZyBwb2ludCIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjEuOTkgZnVsbCBzY3JlZW5cbkFwcCBKWW91UHJvIiksIF9jKCdicicpLCBfdm0uX3YoIlxuU3RhbmRieSB0aW1lIDE1LTIwZGF5XG5CbHVldG9vdGggY2FsbFxuVWx0cmEtdGhpbiBzbWFydHdhdGNoIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJwcmljZSIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3ByaWNlIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBwcmljZSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjEwMDAtMzAwMCBwY3M6IDc2IildKSwgX3ZtLl92KCIgIiksIF9jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJ3YXRjaC04LXVsdHJhIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjd2F0Y2gtOC11bHRyYSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgV2F0Y2ggOCB1bHRyYSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICJodHRwczovL3MxLnZpa2EuY24vc3BhY2UvMjAyMy8wNC8wOS9iYTk0ZDk5NDk0OTg0NWU0YTRkMzllNmZlN2E0MThiZSIsCiAgICAgICJhbHQiOiAiaW1hZ2UtMjAyMzA0MDkxMzQ2MjI0MDQiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzZWxsaW5nLXBvaW50LTIiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzZWxsaW5nLXBvaW50LTIiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHNlbGxpbmcgcG9pbnQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJBUFA6IEhyeWZpbmUubGF0ZXN0IDgtZ2VuZXJhdGlvbiBzcG9ydHMgdmVyc2lvbiBoYXMgdmFyaW91cyBzcG9ydHMgbW9kZXMsIDEuOTEgbGFyZ2Ugc2NyZWVuLCA0OU1NLCB0aHJlZS1idXR0b24sIHdpcmVsZXNzIE5GQzsiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInByaWNlLTIiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNwcmljZS0yIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBwcmljZSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjEwMDAtMzAwMCBwY3M6IDM4IildKSwgX3ZtLl92KCIgIiksIF9jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJ0ODAwLXVsdHJhIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjdDgwMC11bHRyYSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgVDgwMCB1bHRyYSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICJodHRwczovL3MxLnZpa2EuY24vc3BhY2UvMjAyMy8wNC8wOS84OTYzNDgyMjI0YzE0ZjIwYTU2MjQ4ZDdmNzllMDE2ZSIsCiAgICAgICJhbHQiOiAiaW1hZ2UtMjAyMzA0MDkxMzQ2NTY3MjEiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzZWxsaW5nLXBvaW50LTMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzZWxsaW5nLXBvaW50LTMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHNlbGxpbmcgcG9pbnQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCIxLjk5IFVsdHJhLWhpZ2ggZGVmaW5pdGlvbiBmcmFtZWxlc3MgZnVsbCBzY3JlZW4sIG9yaWdpbmFsIDE6MSBhcHBlYXJhbmNlLCB2YWN1dW0gcGxhdGVkIGNhc2UsIHNwZWNpYWwgZnVuY3Rpb24gb25lLWJ1dHRvbiBtb3ZlbWVudCBtb2RlLCBoaWdoLWVuZCBnaWZ0IGJveCB3aXRoIHNwZWNpYWwgYnVja2xlIGFuZCBvY2VhbiBzdHJhcC4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInByaWNlLTMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNwcmljZS0zIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBwcmljZSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjEwMDAtMzAwMCBwY3M6IDM4IildKSwgX3ZtLl92KCIgIiksIF9jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJnczgtdWx0cmEiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNnczgtdWx0cmEiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIEdTOCB1bHRyYSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICJodHRwczovL3MxLnZpa2EuY24vc3BhY2UvMjAyMy8wNC8wOS85NWIzM2U0OGI5MjU0ZmJkYTdmZTBlMzQ5ZGFhMmExNyIsCiAgICAgICJhbHQiOiAiaW1hZ2UtMjAyMzA0MDkxMzQ3NDM4MTYiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzZWxsaW5nLXBvaW50LTQiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzZWxsaW5nLXBvaW50LTQiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHNlbGxpbmcgcG9pbnQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJWb2ljZSBjYWxsL0FsaXBheSBwYXltZW50L2hlYWx0aCBwb3NpdGlvbmluZy9sZWlzdXJlIGdhbWVzL3Nwb3J0cyBtb2RlL251Y2xlaWMgYWNpZCBjb2RlIGZ1bmN0aW9uL2NhbGwgcmVtaW5kZXIvbWVzc2FnZSByZW1pbmRlci9zb2NpYWwgY2FyZC92b2ljZSBhc3Npc3RhbnQvc2hvcnQgdmlkZW8gY29udHJvbC9oZWFsdGggd2Vla2x5IHJlcG9ydC93ZWF0aGVyIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJwcmljZS00IgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjcHJpY2UtNCIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgcHJpY2UiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCIxMDAwLTMwMDAgcGNzOiA4OCIpXSksIF92bS5fdigiICIpLCBfYygnaDInLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAidDkwMC11bHRyYSIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3Q5MDAtdWx0cmEiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFQ5MDAgdWx0cmEiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInNlbGxpbmctcG9pbnQtNSIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3NlbGxpbmctcG9pbnQtNSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgc2VsbGluZyBwb2ludCIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjQ5bW0gc2l6Ze+8jDIuMDJVbHRyYS1oaWdoIGRlZmluaXRpb24gZnJhbWVsZXNzIGZ1bGwgc2NyZWVuLCBvcmlnaW5hbCAxOjEgYXBwZWFyYW5jZSwgdmFjdXVtIHBsYXRlZCBjYXNlLCBzcGVjaWFsIGZ1bmN0aW9uIG9uZS1idXR0b24gbW92ZW1lbnQgbW9kZSwgaGlnaC1lbmQgZ2lmdCBib3ggd2l0aCBzcGVjaWFsIGJ1Y2tsZSBhbmQgb2NlYW4gc3RyYXAuIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJwcmljZS01IgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjcHJpY2UtNSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgcHJpY2UiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCIxMDAwLTMwMDAgcGNzOiA0NCIpXSksIF92bS5fdigiICIpLCBfYygnaDInLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAiczgtdWx0cmEtbWF4IgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjczgtdWx0cmEtbWF4IgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBTOCB1bHRyYSBtYXgiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiAiaHR0cHM6Ly9zMS52aWthLmNuL3NwYWNlLzIwMjMvMDQvMDkvYThmN2I5YThhODVmNGI2YmE3NWI3Yzc5MWY2MWU0ZTciLAogICAgICAiYWx0IjogImltYWdlLTIwMjMwNDA5MTM0OTAyNDk0IgogICAgfQogIH0pXSksIF92bS5fdigiICIpLCBfYygnaDMnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAic2VsbGluZy1wb2ludC02IgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjc2VsbGluZy1wb2ludC02IgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBzZWxsaW5nIHBvaW50IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiQVBQOiBIcnlmaW5lLGxhdGVzdCA4LWdlbmVyYXRpb24gc3BvcnRzIHZlcnNpb24sIHZhcmlvdXMgc3BvcnRzIG1vZGVzLCAyLjA4IGxhcmdlIHNjcmVlbiwgNDlNTSwgcmVhbCBzY3JldywgcmVhbCBidWNrbGUsIHRocmVlLWJ1dHRvbiwgd2lyZWxlc3MgY2hhcmdpbmcgTkZDOyIpXSksIF92bS5fdigiICIpLCBfYygnaDMnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAicHJpY2UtNiIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3ByaWNlLTYiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHByaWNlIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiMTAwMC0zMDAwIHBjczogNDkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInR3MjgtdWx0cmEiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiN0dzI4LXVsdHJhIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBUVzI4IHVsdHJhIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogIkM6JTVDVXNlcnMlNUMlRTUlQjglODUlRTUlOTMlQTUlNUNBcHBEYXRhJTVDUm9hbWluZyU1Q1R5cG9yYSU1Q3R5cG9yYS11c2VyLWltYWdlcyU1Q2ltYWdlLTIwMjMwNDA5MTM0OTQ0NTE4LnBuZyIsCiAgICAgICJhbHQiOiAiaW1hZ2UtMjAyMzA0MDkxMzQ5NDQ1MTgiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzZWxsaW5nLXBvaW50LTciCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzZWxsaW5nLXBvaW50LTciCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHNlbGxpbmcgcG9pbnQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCIxOiBUaGUgZXhjbHVzaXZlIGZpcnN0IGZsYXNobGlnaHQgd2l0aCBzdXBlciBzdHJvbmcgbGlnaHQsIFNPUyBvbmUtYnV0dG9uIGVtZXJnZW5jeSBzaWduYWwgbGlnaHQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCIyOiAzMDAgbUEgYmF0dGVyeSwgc3Ryb25nIGVuZHVyYW5jZSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjM6MzYwNSBTaW5jZXJlIGFuZCBzaW5jZXJlIGJsb29kIG94eWdlbiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjQ6IDIuMDItaW5jaCBoaWdoLWRlZmluaXRpb24gbGFyZ2Ugc2NyZWVuIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiNTogSGlnaC1lbmQgSU1MIGJvdHRvbSBzaGVsbCwgbW9yZSBleHF1aXNpdGUsIHRleHR1cmUsIHJlYWwgc2NyZXciKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCI2OiBCdWlsdC1pbiBtdWx0aS1mdW5jdGlvbiBORkMgYW5hbG9nIGFjY2VzcyBjYXJkLCBvcGVuIHRoZSBoZWFsdGggY29kZSwgYXBwbGljYXRpb24sIGFuZCBzbyBvbiwganVzdCB0b3VjaCB0aGUgcGhvbmUsIHRvdWNoIGl0IHRvIHJlYWNoIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiNzogQmx1ZXRvb3RoIHNpbmdsZSBjb25uZWN0aW9uIGlzIGVhc3kgdG8gb3BlcmF0ZSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjg6IE92ZXJzaXplZCBzcGVha2VyLCBUaWt0b2sgbGlrZSwgbXVsdGlwbGUgbW90aW9uIG1vZGVzLCBtb3Rpb24gdHJhY2ssIGN1c3RvbWl6YWJsZSBzaWRlIGtleXMsIElQNjggd2F0ZXJwcm9vZiDimYDvuI/jgIEgV2l0aCBiYWNrZ3JvdW5kIG1hbmFnZW1lbnQsIG11bHRpcGxlIGhlYWx0aCBtb2RlcywgQWxpcGF5IG9mZmxpbmUgcGF5bWVudCIpXSksIF92bS5fdigiICIpLCBfYygnaDMnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAicHJpY2UtNyIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3ByaWNlLTciCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHByaWNlIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiMTAwMC0zMDAwIHBjczogNzkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIndzOC11bHRyYSIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3dzOC11bHRyYSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgV1M4IHVsdHJhIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogImh0dHBzOi8vczEudmlrYS5jbi9zcGFjZS8yMDIzLzA0LzA5L2FmNGE4N2Y5MDUxYTRkMDhiMmFhOWRmMTZhYmIzZmQwIiwKICAgICAgImFsdCI6ICJpbWFnZS0yMDIzMDQwOTEzNTAyNjM5MCIKICAgIH0KICB9KV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInNlbGxpbmctcG9pbnQtOCIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3NlbGxpbmctcG9pbnQtOCIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgc2VsbGluZyBwb2ludCIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjIuMCBIRCBzY3JlZW4sIHdpcmVsZXNzIGNoYXJnaW5nLCAyNSBsYW5ndWFnZXMsIG5mYywgdGVtcGVyYXR1cmUgbW9uaXRvcmluZywgQmx1ZXRvb3RoIGNhbGwiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInByaWNlLTgiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNwcmljZS04IgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBwcmljZSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjEwMDAtMzAwMCBwY3M6IDY5IildKSwgX3ZtLl92KCIgIiksIF9jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJ6dzgtdWx0cmEtbWF4IgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjenc4LXVsdHJhLW1heCIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgenc4IHVsdHJhIG1heCIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICJodHRwczovL3MxLnZpa2EuY24vc3BhY2UvMjAyMy8wNC8wOS8xN2ViYWY5YzQ1Nzc0NzkwODU4YWMyMTYxMjU5ZmMxYiIsCiAgICAgICJhbHQiOiAiaW1hZ2UtMjAyMzA0MDkxMzUxMDQ4NTciCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzZWxsaW5nLXBvaW50LTkiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzZWxsaW5nLXBvaW50LTkiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHNlbGxpbmcgcG9pbnQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCIxLjk2aW5jaCAgMjQwKjI4NiBIRCByZXNvbHV0aW9uXG40OW1td2l0aCBzY3Jldytib3R0b20gY2FzZSB3aXRoIGJ1Y2tsZSwgb3JpZ2luYWwgcHJvdGVjdGl2ZSBjYXNlIGNhbiBiZSBzZXQsIHdpdGggb2NlYW4gc3RyYXAsIDI1MG1BaCwgQUkgdm9pY2UgYXNzaXN0YW50LCBCbHVldG9vdGggdm9pY2UgY2FsbCwgZXhjbHVzaXZlIEFQUO+8mm1pY3JvZml0LCB3aXRoIHJpY2ggZnVuY3Rpb25zLCBoZWFydCByYXRlIG1vbml0b3JpbmcvYmxvb2QgcHJlc3N1cmUgbW9uaXRvcmluZy9ibG9vZCBveHlnZW4gbW9uaXRvcmluZy9zbGVlcCBtb25pdG9yaW5nIGFuZCBzbyBvbiIpXSksIF92bS5fdigiICIpLCBfYygnaDMnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAicHJpY2UtOSIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3ByaWNlLTkiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIHByaWNlIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiMTAwMC0zMDAwIHBjczogNzgiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIndrOC11bHRyYS1tYXgiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiN3azgtdWx0cmEtbWF4IgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiB3azggdWx0cmEgbWF4IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogImh0dHBzOi8vczEudmlrYS5jbi9zcGFjZS8yMDIzLzA0LzA5LzE2ZTVlYmU5ZTk1YTQ5YTY4ODYzNzZlYTE5OTgxNjc4IiwKICAgICAgImFsdCI6ICJpbWFnZS0yMDIzMDQwOTEzNTE1MDM4NyIKICAgIH0KICB9KV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInNlbGxpbmctcG9pbnQtMTAiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzZWxsaW5nLXBvaW50LTEwIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBzZWxsaW5nIHBvaW50IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiTmV3IOKRoCAyLjA1aW5jaCB1bHRyYS1oaWdoIGRlZmluaXRpb24gZnJhbWVsZXNzIGZ1bGwgc2NyZWVuIPCfpYciKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJCcmFuZCBuZXcg4pGhIGJyYW5kIG5ldyBvcmlnaW5hbCBvbmUtdG8tb25lIGFwcGVhcmFuY2UgYW5kIG9yaWdpbmFsIGNsaXAsIHJlYWwgc2NyZXcuIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiQnJhbmQgbmV3IOKRoiBvcmlnaW5hbCA0OW1tIHRpdGFuaXVtIG1ldGFsIGNhc2UgaW5nZW5pb3VzbHkgY29uc2lkZXJpbmcgd2VpZ2h0IGFuZCBmaXJtbmVzcyIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkJyYW5kIG5ldyDikaMgQ3VzdG9taXphYmxlIG9wZXJhdGlvbiBidXR0b24gc3BlY2lhbCBmdW5jdGlvbiBjYW4gcmVhY2ggU09TIGVtZXJnZW5jeSBjb250YWN0IGltbWVkaWF0ZWx5IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiQnJhbmQgbmV3IOKRpCBzcGVjaWFsIGJ1Y2tsZSBicmFuZCBuZXcgbWFyaW5lIHdhdGNoIHN0cmFwLCBtYXRjaGluZyB3aXRoIGZyZWUgbnlsb24gd2F0Y2ggc3RyYXAuIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiQnJhbmQgbmV3IOKRpSBORkMgYWNjZXNzIGNhcmQsIGhlYWx0aCBjb2RlIHNob3J0IHZpZGVvIHJlbW90ZSBjb250cm9sLCBBbGlwYXkgb2ZmbGluZSBwYXltZW50LCBsZWlzdXJlIGdhbWVzLCBoZWFsdGggbW9uaXRvcmluZywgdm9pY2UgYXNzaXN0YW50LCB3aXJlbGVzcyBjaGFyZ2luZywgYW5kIHVsdHJhLWxvdyBwb3dlciBjb25zdW1wdGlvbiBmb3Igc2NyZWVuIG9mZiBkaXNwbGF5IHRpbWUuIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJwcmljZS0xMCIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3ByaWNlLTEwIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBwcmljZSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIjEwMDAtMzAwMCBwY3M6IDk4IildKSwgX3ZtLl92KCIgIiksIF9jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJyZW1hcmsiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNyZW1hcmsiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiICIpLCBfYygnc3Ryb25nJywgW192bS5fdigiUmVtYXJrIildKSwgX3ZtLl92KCI6IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdzdHJvbmcnLCBbX3ZtLl92KCIxLlRoZSBwcmljZSBpcyBiYXNlIG9uIEVYVyIpXSksIF92bS5fdigiICIpLCBfYygnc3Ryb25nJywgW192bS5fdigiMi5QYWNrYWdlOiBuZXV0cmFsIHBhY2tpbmciKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3N0cm9uZycsIFtfdm0uX3YoIjMubGVhZGluZyB0aW1lOjUgZGF5cyBhZnRlciBjb25maXJtIHRoZSBzYW1wbGVcdFx0XHRcdDQuR3VhcmFudGVlIHBlcmlvZCA6IDEgWUVBUiIpXSldKV0pOwp9Owp2YXIgc3RhdGljUmVuZGVyRm5zID0gW107CmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH07"},null]}